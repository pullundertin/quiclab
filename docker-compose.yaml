version: "3.3"

services:

  client_1:
    image: pulltin/quiclab:${VERSION}
    privileged: true
    hostname: client_1
    container_name: client_1
    volumes:
      - ${CLIENT_SCRIPTS_DIRECTORY}
      - ${SHARED_DIRECTORY}
      - ${LOG_DIRECTORY}
      - ${KEYS_DIRECTORY}
      - ${PCAP_DIRECTORY}
      - ${QLOG_DIRECTORY_CLIENT}
      - ${TCPPROBE_DIRECTORY}
    cap_add:
      - NET_ADMIN
    networks:
      A_client_network:
        ipv4_address: ${CLIENT_1_IP}
    environment:
      - TZ=${TZ}
      - HOST=client_1
      - LOG_PATH=${LOG_PATH}
      - KEYS_PATH=${KEYS_PATH}
      - TICKET_PATH=${TICKET_PATH}
      - QLOG_PATH_CLIENT=${QLOG_PATH_CLIENT}
      - PCAP_PATH=${PCAP_PATH}
    stdin_open: true
    tty: true
    command: sh -c "/scripts/setup.sh && tail -f /dev/null"
    working_dir: /

  client_2:
    image: pulltin/quiclab:${VERSION}
    privileged: true
    hostname: client_2
    container_name: client_2
    volumes:
      - ${CLIENT_SCRIPTS_DIRECTORY}
      - ${SHARED_DIRECTORY}
      - ${LOG_DIRECTORY}
      - ${KEYS_DIRECTORY}
      - ${PCAP_DIRECTORY}
      - ${QLOG_DIRECTORY_CLIENT}
      - ${TCPPROBE_DIRECTORY}
    cap_add:
      - NET_ADMIN
    networks:
      A_client_network:
        ipv4_address: ${CLIENT_2_IP}
    environment:
      - TZ=${TZ}
      - HOST=client_2
      - LOG_PATH=${LOG_PATH}
      - KEYS_PATH=${KEYS_PATH}
      - TICKET_PATH=${TICKET_PATH}
      - QLOG_PATH_CLIENT=${QLOG_PATH_CLIENT}
      - PCAP_PATH=${PCAP_PATH}
    stdin_open: true
    tty: true
    command: sh -c "/scripts/setup.sh && tail -f /dev/null"
    working_dir: /

  router_1:
    image: pulltin/quiclab:${VERSION}
    privileged: true
    hostname: router_1
    container_name: router_1
    volumes:
      - ${ROUTER_SCRIPTS_DIRECTORY}
      - ${SHARED_DIRECTORY}
      - ${LOG_DIRECTORY}
      - ${PCAP_DIRECTORY}
    cap_add:
      - NET_ADMIN
    networks:
      A_client_network:
        ipv4_address: ${ROUTER_1_CLIENT_SIDE_IP}
      B_wan_network:
        ipv4_address: ${ROUTER_1_WAN_SIDE_IP}
    environment:
      - TZ=${TZ}
      - HOST=router_1
      - LOG_PATH=${LOG_PATH}
      - PCAP_PATH=${PCAP_PATH}
      - SUBNET_1=${WAN_SUBNET}
      - SUBNET_2=${SERVER_SUBNET}
      - GW_1=${ROUTER_1_WAN_SIDE_IP}
      - GW_2=${ROUTER_2_WAN_SIDE_IP}
      - IFACE=eth1

    command: sh -c "/scripts/setup.sh && tail -f /dev/null"
    stdin_open: true
    tty: true

  router_2:
    image: pulltin/quiclab:${VERSION}
    privileged: true
    hostname: router_2
    container_name: router_2
    volumes:
      - ${ROUTER_SCRIPTS_DIRECTORY}
      - ${SHARED_DIRECTORY}
      - ${LOG_DIRECTORY}
      - ${PCAP_DIRECTORY}
    cap_add:
      - NET_ADMIN
    networks:
      B_wan_network:
        ipv4_address: ${ROUTER_2_WAN_SIDE_IP}
      C_server_network:
        ipv4_address: ${ROUTER_2_SERVER_SIDE_IP}
    environment:
      - TZ=${TZ}
      - HOST=router_2
      - LOG_PATH=${LOG_PATH}
      - PCAP_PATH=${PCAP_PATH}
      - SUBNET_1=${CLIENT_SUBNET}
      - SUBNET_2=${WAN_SUBNET}
      - GW_1=${ROUTER_1_WAN_SIDE_IP}
      - GW_2=${ROUTER_2_WAN_SIDE_IP}
      - IFACE=eth0

    command: sh -c "/scripts/setup.sh && tail -f /dev/null"
    stdin_open: true
    tty: true

  server:
    image: pulltin/quiclab:${VERSION}
    privileged: true
    hostname: server
    container_name: server
    volumes:
      - ${SERVER_SCRIPTS_DIRECTORY}
      - ${SERVER_DATA_DIRECTORY}
      - ${SHARED_DIRECTORY}
      - ${LOG_DIRECTORY}
      - ${KEYS_DIRECTORY}
      - ${PCAP_DIRECTORY}
      - ${QLOG_DIRECTORY_SERVER}
      - ${TCPPROBE_DIRECTORY}
    cap_add:
      - NET_ADMIN
    networks:
      C_server_network:
        ipv4_address: ${SERVER_IP}
    ports:
      - "8086:8086"
    environment:
      - TZ=${TZ}
      - HOST=server
      - LOG_PATH=${LOG_PATH}
      - QLOG_PATH_SERVER=${QLOG_PATH_SERVER}
      - PCAP_PATH=${PCAP_PATH}
      - DATA_PATH=${DATA_PATH}

    command: sh -c "/scripts/setup.sh && tail -f /dev/null"
    stdin_open: true
    tty: true

  grafana:
    image: "grafana/grafana-oss:latest"
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      A_client_network:
        ipv4_address: ${GRAFANA_SERVER_IP}
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=quiclab
      - GF_SECURITY_ADMIN_PASSWORD=quiclab
      - GF_DATE_FORMATS_FULL_DATE=YYYY-MM-DD HH:mm:ss.SSS
    restart: unless-stopped

  file_server:
    image: pulltin/quiclab:${VERSION}
    container_name: file_server
    hostname: file_server
    ports:
      - "80:80"
    volumes:
      - ${SERVER_SCRIPTS_DIRECTORY}
      - ${SHARED_DIRECTORY}
    command: sh -c "/scripts/setup_file_server.sh && tail -f /dev/null"
    stdin_open: true
    tty: true

  qvis_server:
    image: pulltin/qvis_server:1.2
    container_name: qvis_server
    hostname: qvis_server
    ports:
      - "8080:8080"
    volumes:
      - ${SERVER_SCRIPTS_DIRECTORY}
      - ${SHARED_DIRECTORY}
    command: sh -c "/scripts/setup_qvis_server.sh && tail -f /dev/null"
    stdin_open: true
    tty: true

volumes:
  grafana-storage: {}
networks:
  A_client_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${CLIENT_SUBNET}
  B_wan_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${WAN_SUBNET}
  C_server_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${SERVER_SUBNET}
